"""Renamed teacher name to teacher_id in lessons

Revision ID: 28830e0ca50d
Revises: 
Create Date: 2023-09-08 09:36:45.270456

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '28830e0ca50d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('students',
    sa.Column('student_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('phone_number', sa.Integer(), nullable=True),
    sa.Column('admission_id', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('student_id')
    )
    op.create_table('subjects',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('subject_code', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('subject_code', name='uq_subject_code')
    )
    op.create_table('attendances',
    sa.Column('attendance_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('attendance_date', sa.DateTime(), nullable=True),
    sa.Column('checkin_time', sa.DateTime(), nullable=True),
    sa.Column('checkout_time', sa.DateTime(), nullable=True),
    sa.Column('attendance_status', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.student_id'], name=op.f('fk_attendances_student_id_students')),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name=op.f('fk_attendances_subject_id_subjects')),
    sa.PrimaryKeyConstraint('attendance_id')
    )
    op.create_table('grades',
    sa.Column('grade_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('grade_value', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.student_id'], name=op.f('fk_grades_student_id_students')),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name=op.f('fk_grades_subject_id_subjects')),
    sa.PrimaryKeyConstraint('grade_id')
    )
    op.create_table('student_subject_association',
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.student_id'], name=op.f('fk_student_subject_association_student_id_students')),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name=op.f('fk_student_subject_association_subject_id_subjects'))
    )
    op.create_table('teachers',
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name=op.f('fk_teachers_subject_id_subjects')),
    sa.PrimaryKeyConstraint('teacher_id')
    )
    op.create_table('lessons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.Column('subject_name', sa.String(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.student_id'], name=op.f('fk_lessons_student_id_students')),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name=op.f('fk_lessons_subject_id_subjects')),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.teacher_id'], name=op.f('fk_lessons_teacher_id_teachers')),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('lessons')
    op.drop_table('teachers')
    op.drop_table('student_subject_association')
    op.drop_table('grades')
    op.drop_table('attendances')
    op.drop_table('subjects')
    op.drop_table('students')
    # ### end Alembic commands ###
